// Code generated by jtd-codegen for Rust v0.2.1

use serde::{Deserialize, Serialize};

#[derive(Serialize, Deserialize)]
pub struct DailyApiMetric {
    #[serde(rename = "bytes")]
    pub bytes: i32,

    #[serde(rename = "day")]
    pub day: String,

    #[serde(rename = "duration")]
    pub duration: f64,

    #[serde(rename = "nbRequests")]
    pub nbRequests: i32,

    #[serde(rename = "operationTrack")]
    pub operationTrack: String,

    #[serde(rename = "owner")]
    pub owner: ShortAccount,

    #[serde(rename = "refererDomain")]
    pub refererDomain: String,

    #[serde(rename = "resource")]
    pub resource: Resource,

    #[serde(rename = "statusClass")]
    pub statusClass: StatusClass,

    #[serde(rename = "userClass")]
    pub userClass: UserClass,

    #[serde(rename = "processing")]
    #[serde(skip_serializing_if = "Option::is_none")]
    pub processing: Option<Processing>,

    #[serde(rename = "refererApp")]
    #[serde(skip_serializing_if = "Option::is_none")]
    pub refererApp: Option<String>,
}

#[derive(Serialize, Deserialize)]
pub struct Processing {
    #[serde(rename = "_id")]
    pub id: String,

    #[serde(rename = "title")]
    #[serde(skip_serializing_if = "Option::is_none")]
    pub title: Option<String>,
}

#[derive(Serialize, Deserialize)]
pub struct Resource {
    #[serde(rename = "id")]
    pub id: String,

    #[serde(rename = "type")]
    pub type_: String,

    #[serde(rename = "title")]
    #[serde(skip_serializing_if = "Option::is_none")]
    pub title: Option<String>,
}

#[derive(Serialize, Deserialize)]
pub struct ShortAccount {
    #[serde(rename = "id")]
    pub id: String,

    #[serde(rename = "type")]
    pub type_: String,

    #[serde(rename = "department")]
    #[serde(skip_serializing_if = "Option::is_none")]
    pub department: Option<String>,
}

pub type StatusClass = String;

pub type UserClass = String;
