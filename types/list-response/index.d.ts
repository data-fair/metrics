/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */
export interface ListResponse {
    count: number;
    results: DailyApiMetric[];
}
export interface DailyApiMetric {
    owner?: SessionState;
    day: string;
    resource: Resource;
    operationTrack: "readDataFiles" | "readDataAPI" | "openApplication";
    statusClass: "info" | "ok" | "redirect" | "clientError" | "serverError";
    userClass: "anonymous" | "owner" | "external" | "ownerAPIKey" | "externalAPIKey" | "ownerProcessing" | "externalProcessing";
    refererDomain: string;
    refererApp: string;
    processing?: string;
    nbRequests: number;
    bytes: number;
    duration: number;
}
export interface SessionState {
    user?: User;
    organization?: OrganizationMembership;
    account?: Account;
    accountRole?: string;
    lang?: string;
    dark?: boolean;
    [k: string]: unknown;
}
export interface User {
    email: string;
    id: string;
    name: string;
    /**
     * @minItems 0
     */
    organizations: OrganizationMembership[];
    isAdmin?: 0 | 1;
    adminMode?: 0 | 1;
    asAdmin?: UserRef;
    pd?: string;
    ipa?: 0 | 1;
}
export interface OrganizationMembership {
    id: string;
    name: string;
    role: string;
    department?: string;
    departmentName?: string;
    dflt?: boolean;
}
export interface UserRef {
    id: string;
    name: string;
}
export interface Account {
    type: string;
    id: string;
    name: string;
    department?: string;
    departmentName?: string;
}
export interface Resource {
    type: string;
    id: string;
    title?: string;
}
export declare const listResponseSchema: {
    $id: string;
    title: string;
    type: string;
    additionalProperties: boolean;
    required: string[];
    properties: {
        count: {
            type: string;
        };
        results: {
            type: string;
            items: {
                $ref: string;
            };
        };
    };
};
