/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */
export type OperationTrack = "readDataFiles" | "readDataAPI" | "openApplication";
export type StatusClass = "info" | "ok" | "redirect" | "clientError" | "serverError";
export type UserClass = "anonymous" | "owner" | "external" | "ownerAPIKey" | "externalAPIKey" | "ownerProcessing" | "externalProcessing";
export interface DailyApiMetric {
    owner?: SessionState;
    day: string;
    resource: Resource;
    operationTrack: OperationTrack;
    statusClass: StatusClass;
    userClass: UserClass;
    refererDomain: string;
    refererApp: string;
    processing?: string;
    nbRequests: number;
    bytes: number;
    duration: number;
}
export interface SessionState {
    user?: User;
    organization?: OrganizationMembership;
    account?: Account;
    accountRole?: string;
    lang?: string;
    dark?: boolean;
    [k: string]: unknown;
}
export interface User {
    email: string;
    id: string;
    name: string;
    organizations: OrganizationMembership[];
    isAdmin?: 0 | 1;
    adminMode?: 0 | 1;
    asAdmin?: UserRef;
    pd?: string;
    ipa?: 0 | 1;
}
export interface OrganizationMembership {
    id: string;
    name: string;
    role: string;
    department?: string;
    departmentName?: string;
    dflt?: boolean;
}
export interface UserRef {
    id: string;
    name: string;
}
export interface Account {
    type: string;
    id: string;
    name: string;
    department?: string;
    departmentName?: string;
}
export interface Resource {
    type: string;
    id: string;
    title?: string;
}
export declare const dailyApiMetricSchema: {
    $id: string;
    type: string;
    title: string;
    additionalProperties: boolean;
    required: string[];
    properties: {
        owner: {
            $ref: string;
        };
        day: {
            type: string;
            format: string;
        };
        resource: {
            $ref: string;
        };
        operationTrack: {
            $ref: string;
        };
        statusClass: {
            $ref: string;
        };
        userClass: {
            $ref: string;
        };
        refererDomain: {
            type: string;
        };
        refererApp: {
            type: string;
        };
        processing: {
            type: string;
        };
        nbRequests: {
            type: string;
            default: number;
        };
        bytes: {
            type: string;
            default: number;
        };
        duration: {
            type: string;
            default: number;
        };
    };
    definitions: {
        resource: {
            type: string;
            additionalProperties: boolean;
            required: string[];
            properties: {
                type: {
                    type: string;
                };
                id: {
                    type: string;
                };
                title: {
                    type: string;
                };
            };
        };
        operationTrack: {
            type: string;
            enum: string[];
        };
        statusClass: {
            type: string;
            enum: string[];
        };
        userClass: {
            type: string;
            enum: string[];
        };
    };
};
